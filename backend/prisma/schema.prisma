generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int            @id @default(autoincrement())
  telegramId Int            @unique
  username   String?
  firstName  String
  lastName   String?
  projects   Project[]      @relation("OwnedProjects")
  sharedProjects ProjectShare[]
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  @@map("users")
}

model Project {
  id          Int            @id @default(autoincrement())
  name        String
  description String?
  tasks       Task[]
  owner       User           @relation("OwnedProjects", fields: [ownerId], references: [id])
  ownerId     Int
  shareCode   String?        @unique
  sharedWith  ProjectShare[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  @@map("projects")
}

model ProjectShare {
  id        Int      @id @default(autoincrement())
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([projectId, userId])
  @@map("project_shares")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean   @default(false)
  priority    Priority  @default(MEDIUM)
  dueDate     DateTime?
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  project     Project   @relation(fields: [projectId], references: [id])
  projectId   Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  @@map("tasks")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  color       String    @default("#808080")
  tasks       Task[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  @@map("categories")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
} 